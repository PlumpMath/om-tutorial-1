;; Analyzed by ClojureScript 1.7.145
{:use-macros {defui om.next}, :excludes #{}, :name om-tutorial.core, :imports nil, :requires {gdom goog.dom, goog.dom goog.dom, om om.next, om.next om.next, dom om.dom, om.dom om.dom}, :uses nil, :defs {app-state {:name om-tutorial.core/app-state, :file "src/om_tutorial/core.cljs", :line 8, :column 1, :end-line 8, :end-column 15, :meta {:file "/home/tom/Code/om-tutorial/src/om_tutorial/core.cljs", :line 8, :column 6, :end-line 8, :end-column 15}}, HelloWorld {:protocol-inline nil, :meta {:jsdoc ["@constructor"], :arglists (quote ([])), :file nil}, :name om-tutorial.core/HelloWorld, :variadic false, :file "src/om_tutorial/core.cljs", :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :jsdoc ["@constructor"]}, AnimalsList {:protocol-inline nil, :meta {:jsdoc ["@constructor"], :arglists (quote ([])), :file nil}, :name om-tutorial.core/AnimalsList, :variadic false, :file "src/om_tutorial/core.cljs", :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 33, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :jsdoc ["@constructor"]}, read {:name om-tutorial.core/read, :file "src/om_tutorial/core.cljs", :line 53, :column 1, :end-line 53, :end-column 15, :meta {:file "/home/tom/Code/om-tutorial/src/om_tutorial/core.cljs", :line 53, :column 11, :end-line 53, :end-column 15}}, mutate {:protocol-inline nil, :meta {:file "/home/tom/Code/om-tutorial/src/om_tutorial/core.cljs", :line 67, :column 7, :end-line 67, :end-column 13, :arglists (quote ([{:keys [state], :as env} key params]))}, :name om-tutorial.core/mutate, :variadic false, :file "src/om_tutorial/core.cljs", :end-column 13, :method-params ([p__20515 key params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 67, :end-line 67, :max-fixed-arity 3, :fn-var true, :arglists (quote ([{:keys [state], :as env} key params]))}, my-parser {:name om-tutorial.core/my-parser, :file "src/om_tutorial/core.cljs", :line 74, :column 1, :end-line 74, :end-column 15, :meta {:file "/home/tom/Code/om-tutorial/src/om_tutorial/core.cljs", :line 74, :column 6, :end-line 74, :end-column 15}}, hello {:name om-tutorial.core/hello, :file "src/om_tutorial/core.cljs", :line 79, :column 1, :end-line 79, :end-column 11, :meta {:file "/home/tom/Code/om-tutorial/src/om_tutorial/core.cljs", :line 79, :column 6, :end-line 79, :end-column 11}}, reconciler {:name om-tutorial.core/reconciler, :file "src/om_tutorial/core.cljs", :line 81, :column 1, :end-line 81, :end-column 16, :meta {:file "/home/tom/Code/om-tutorial/src/om_tutorial/core.cljs", :line 81, :column 6, :end-line 81, :end-column 16}}}, :require-macros {om om.next, om.next om.next, dom om.dom, om.dom om.dom}, :cljs.analyzer/constants {:seen #{:read :om.next/queries :config ?start :default :value :animals/list increment :start ?end :state :app/title :parser :keys :not-found :indexer :count :action :end :hierarchy :mutate}, :order [:app/title :animals/list :config :state :indexer :om.next/queries :count increment :start :end ?start ?end :hierarchy :default :value :not-found :action :keys :read :mutate :parser]}, :doc nil}